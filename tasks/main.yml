---
# tasks file for swygue-smartd

- name: Install smartmontools
  package:
    name: smartmontools
    state: installed
  when: smartd_service and ansible_virtualization_role != "guest"

- name: grab list of devices by running smartctl --scan
  command: "/usr/sbin/smartctl --scan"
  register: smart_list_of_devices
  check_mode: no
  changed_when: False
  when: smartd_service|bool

- name: check if "{{ smartd_config_file }}.bkp" exist
  stat:
    path: "{{ smartd_config_file }}.bkp"
  register: smartd_config

- name: move the default smartd.conf
  command: mv -v {{ smartd_config_file }} {{ smartd_config_file }}.bkp creates={{ smartd_config_file }}.bkp
  when: smartd_config.stat.exists == False

- name: print smart_list_of_devices if it is defined
  debug: 
    var: item.split('#').0 
    verbosity: 1
  loop: "{{ smart_list_of_devices.stdout_lines | default({})}}"

- name: Deploy smartd.conf template
  template: 
    owner: root 
    group: root 
    mode: 0644
    src: smartd.conf.j2
    dest: "{{ smartd_config_file }}"
  #when: smartd_config.stat.exists == False

- name: Deploy "{{ smartd_notify_script }}" template
  template: 
    owner: root 
    group: root 
    mode: 0755
    src: smartdnotify.j2
    dest: "{{ smartd_notify_script }}"
  notify: restart smartd

- name: Populate smartd file with these devices
  lineinfile:
    dest: "{{ smartd_config_file }}"
    regexp: '{{ item }}$'
    line: "{{ item }}"
    state: present
    create: yes
  with_items: "{{ smart_list_of_devices.stdout_lines | default({}) }}"
  notify:
    - restart smartd

- name: enable smartd service
  service: 
    name: smartd 
    enabled: "{{ smartd_service_enabled }}" 
    state: "{{ smartd_service_state }}"
  when: smartd_service and ansible_virtualization_role != "guest"

- name: include smartd logging setup
  include_tasks: enable_var_log.yml